<?php require_once(__DIR__.'/../../Connections/exsite_login.php'); ?>
<?php
ini_set( 'display_errors', 1 );
ini_set( 'display_startup_errors', 1 );
error_reporting( E_ALL );

$debug = 1;
require_once( '../vendor/tecnickcom/tcpdf/tcpdf.php' );
require_once( '../vendor/setasign/fpdi/src/autoload.php' );

use setasign\Fpdi\Tcpdf\Fpdi;
/*error_reporting(E_ALL);
ini_set('display_errors', 1);*/
/*
UploadiFive
Copyright (c) 2012 Reactive Apps, Ronnie Garcia
*/

/*
IMPORTANT: This script requires the PHP GD library
*/
//print_r($_SESSION);exit;
// Set the uplaod directory
$uploadDir = __DIR__ . '/../../../userfiles/user/' . $_SESSION[ 'user_id' ] . '/file/';

// Check if the directory exists
if ( !is_dir( $uploadDir ) ) {
  // Try to create the directory, with recursive option (for nested folders) and proper permissions
  if ( mkdir( $uploadDir, 0755, true ) ) {
    if ( $debug )echo "<hr>Directory created successfully.";
  } else {
    if ( $debug )echo "<hr>Failed to create the directory.";
  }
} else {
  if ( $debug )echo "<hr>Directory already exists.";
}


function errorHandler( $errno, $errstr, $errfile, $errline ) {
  // In this script, the silently suppress any error generated by getimagesize
  // which will throw an error if the "image" isn't an image
  // ie doesn't have a valid width / height

  /* Don't execute PHP internal error handler */
  return true;
}

$old_error_handler = set_error_handler( "errorHandler" );

// Check if the file has a width and height
function isImage( $tempFile ) {

  // Get the size of the image
  $size = getimagesize( $tempFile );

  if ( isset( $size ) && $size[ 0 ] && $size[ 1 ] && $size[ 0 ] * $size[ 1 ] > 0 ) {
    return true;
  } else {
    return false;
  }

}

function imageList( $tempFile ) {
  $size = array_values( getimagesize( $tempFile ) );
  return list( $width, $height, $type, $attr ) = $size;
}

function imageType( $type ) {
  return image_type_to_mime_type( $type );
}

function getPdfVersion( $filePath ) {
  // Open the PDF file in binary mode
  $file = fopen( $filePath, 'rb' );
  if ( !$file ) {
    return false;
  }

  // Read the first 8 bytes to capture the PDF version
  $header = fread( $file, 8 );
  fclose( $file );

  // Check if it's a PDF file and extract the version
  if ( preg_match( '/%PDF-(\d\.\d)/', $header, $matches ) ) {
    return $matches[ 1 ]; // Return the PDF version (e.g., 1.4, 1.7)
  }

  return false; // Return false if the file is not a valid PDF
}

if ( !empty( $_FILES ) ) {

  $fileData = $_FILES[ 'Filedata' ];

  if ( $fileData ) { // Check if folder exists, if not, create
  
	$tempFile = $fileData[ 'tmp_name' ];
	$aduan_files_shortname = shorten($fileData['name']);
	$targetFile = $uploadDir . $aduan_files_shortname;
	
    if ( !is_dir( $uploadDir ) ) {
      mkdir( $uploadDir, 0777, true );
    }

    // Validate the file type
    $fileTypes = array( 'png', 'jpg', 'gif', 'jpeg', 'webp', 'pdf' ); // Allowed file extensions
    $fileParts = pathinfo( $fileData[ 'name' ] );
    $fileExtension = strtolower( $fileParts[ 'extension' ] );
    $fileSize = filesize( $tempFile );

    if ( !in_array( $fileExtension, $fileTypes ) ) {
      // The file type is not allowed
      echo 'Invalid file type.';
      exit;
    }

    if ( $fileSize === 0 ) {
      // The file size is zero or the file cannot be read
      echo 'File size is zero or file cannot be read.';
      exit;
    }



    // Save the file
            move_uploaded_file( $tempFile, $targetFile );

    $filesize = filesize( $targetFile );
    $pdf_version = getPdfVersion( $targetFile );

    $filename = $fileData[ 'name' ];
    $text = $text_detail = $file_ocr_keyword = '';

    if ( $fileExtension === 'pdf' ) {
      if ( $pdf_version !== false && $filesize < 10485760 ) {
        include( '../pdfparser/vendor/autoload.php' );
        $parser = new \Smalot\PdfParser\Parser();

        try {
          $pdf = $parser->parseFile( $targetFile );

          foreach ( $pdf->getPages() as $page ) {
            $text .= $page->getText();
          }

          foreach ( $pdf->getDetails() as $property => $value ) {
            $text_detail .= $property . ' => ' . ( is_array( $value ) ? implode( ', ', $value ) : $value ) . "\n";
          }

          $filter1 = filter_var( $text, FILTER_SANITIZE_STRING );
          $filter2 = preg_replace( '/[\x00-\x1F\x7F\xA0]/u', " ", $filter1 );
          $file_ocr_keyword = preg_replace( '/\s+/', ' ', $filter2 );
        } catch ( Exception $e ) {
          $file_ocr_keyword = "";
        }
      }
    }

    // Determine file type
    $imageTypes = array( 'png', 'jpg', 'jpeg', 'gif', 'webp' );
    $aduan_file_type = in_array( $fileExtension, $imageTypes ) ? 1 : ( $fileExtension === 'pdf' ? 2 : 0 );

    // Assume these are the values retrieved from the form or file upload process
    $aduan_filename = $fileData[ 'name' ];
    $aduan_files_moddate = $_POST[ 'timestamp' ] ?? time();
    $aduan_files_modby = $_POST[ 'aduan_user_nama' ];
    $aduan_files_full_path = $targetFile;
    $aduan_files_user_id = $_POST[ 'user_id' ];
    $aduan_files_subject_id = $_POST[ 'subject_id' ];
    $aduan_files_aduan_id = $_POST[ 'id_rekod' ];

    // Prepare the SQL statement
    $sql = "INSERT INTO aduan_files (
    aduan_filename, aduan_rekod_id, aduan_file_type, aduan_files_moddate,
    aduan_files_modby, aduan_files_full_path, aduan_files_user_id,
    aduan_files_subject_id, aduan_files_shortname, aduan_files_ocr_keyword, aduan_files_pdf_path) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";

    // Prepare the statement
    mysqli_select_db( $exsite, $database_exsite );
    $stmt = mysqli_prepare( $exsite, $sql );

    if ( !$stmt ) {
      echo "Failed to prepare the SQL statement: " . mysqli_error( $exsite );
      exit;
    }

    // Bind the parameters
    mysqli_stmt_bind_param(
      $stmt,
      'sissssissss',
      $aduan_filename,
      $aduan_files_aduan_id,
      $aduan_file_type,
      $aduan_files_moddate,
      $aduan_files_modby,
      $aduan_files_full_path,
      $aduan_files_user_id,
      $aduan_files_subject_id,
      $aduan_files_shortname,
      $file_ocr_keyword,
      $targetFile
    );

      // Log the SQL query and parameters for debugging
$debug_query = sprintf(
    "INSERT INTO aduan_files (
        aduan_filename, aduan_rekod_id, aduan_file_type, aduan_files_moddate,
        aduan_files_modby, aduan_files_full_path, aduan_files_user_id,
        aduan_files_subject_id, aduan_files_shortname, aduan_files_ocr_keyword, aduan_files_pdf_path
    ) VALUES ('%s', '%s', '%s', '%s', '%s', '%s', '%s', '%s', '%s', '%s', '%s')",
    $aduan_filename,
    $aduan_files_aduan_id,
    $aduan_file_type,
    $aduan_files_moddate,
    $aduan_files_modby,
    $aduan_files_full_path,
    $aduan_files_user_id,
    $aduan_files_subject_id,
    $aduan_files_shortname,
    $file_ocr_keyword,
    $targetFile
);

if ($debug) {
    echo "<hr><strong>Debug Query:</strong><br>" . nl2br(htmlspecialchars($debug_query)) . "<hr>";
}

      
      
    // Execute the statement
    if ( mysqli_stmt_execute( $stmt ) ) {
      echo 'File data inserted successfully.';
    } else {
      echo 'Error inserting file data: ' . mysqli_error( $exsite );
    }

    // Close the statement
    mysqli_stmt_close( $stmt );
  }
}
?>