<?php require_once(__DIR__.'/../../../Connections/exsite_nologin.php'); ?>
<?php 
ini_set('display_errors', 1); ini_set('display_startup_errors', 1); error_reporting(E_ALL);

include('../pdfconverter/vendor/autoload.php');
use Xthiago\PDFVersionConverter\Guesser\RegexGuesser;	


/*error_reporting(E_ALL);
ini_set('display_errors', 1);*/
/*
UploadiFive
Copyright (c) 2012 Reactive Apps, Ronnie Garcia
*/

/*
IMPORTANT: This script requires the PHP GD library
*/

// Set the uplaod directory
$uploadDir = $_SESSION['account_folder'].'/userfiles/user/'.$_SESSION['account_id'].'/file/';

function errorHandler($errno, $errstr, $errfile, $errline) {
	// In this script, the silently suppress any error generated by getimagesize
	// which will throw an error if the "image" isn't an image
	// ie doesn't have a valid width / height

    /* Don't execute PHP internal error handler */
    return true;
}

$old_error_handler = set_error_handler("errorHandler");

// Check if the file has a width and height
function isImage($tempFile) {

	// Get the size of the image
    $size = getimagesize($tempFile);

	if (isset($size) && $size[0] && $size[1] && $size[0] *  $size[1] > 0) {
		return true;
	} else {
		return false;
	}

}
function imageList($tempFile){
	$size = array_values(getimagesize($tempFile));
	return list($width, $height, $type, $attr) = $size;
}
function imageType($type){
	return image_type_to_mime_type($type);
}

if (!empty($_FILES)) {

	$fileData = $_FILES['Filedata'];

	if ($fileData) {
		$tempFile   = $fileData['tmp_name'];
		$uploadDir  = $_SERVER['DOCUMENT_ROOT'] . $uploadDir;
		$targetFile = $uploadDir . $fileData['name'];
		

		// Validate the file type
		$fileTypes = array('pdf', 'doc', 'docx', 'xls', 'xlsx', 'mp4', 'zip', 'rar'); // Allowed file extensions
		$fileParts = pathinfo($fileData['name']);

		// Validate the filetype
		if (in_array(strtolower($fileParts['extension']), $fileTypes) && filesize($tempFile) > 0) {
			
			$id = $_REQUEST['id_page'];
            $file_section_id = 0;
            
            if(isset($_POST['id_section']) && ($_POST['id_section']!="")){
                $id = $_POST['id_section'];
                $file_section_id = 1;
            }
            
			$file_modby = $_REQUEST['modby'];
			
			if(isset($_REQUEST['moddate'])&&($_REQUEST['moddate']!="")){
				$file_moddate = $_REQUEST['moddate'];
			} else {
				$file_moddate = time();
			}

			// Save the file
			move_uploaded_file($tempFile, $targetFile);
			
			$filesize = filesize($targetFile); //echo $filesize;exit;	
			
			$filename =  $fileData['name'];
			$ext = pathinfo($filename, PATHINFO_EXTENSION);
			if (strtolower($ext) == "pdf"){
				
				$guesser = new RegexGuesser();
				$pdf_version = $guesser->guess($targetFile); // will print something like '1.4'
				
			// parse only if file size < 10MB
			   if ($filesize<10485760){	
				include('../pdfparser/vendor/autoload.php');
				// Parse pdf file and build necessary objects.
				$parser = new \Smalot\PdfParser\Parser();
				
				try {
					$pdf = $parser->parseFile($targetFile);
				
					// Retrieve all pages from the pdf file.
					$pages  = $pdf->getPages();

					// Loop over each page to extract text.
					foreach ($pages as $page) {
						$text.= $page->getText();
					}
					//echo $text;

					// Retrieve all details from the pdf file.
					$details  = $pdf->getDetails();

					// Loop over each property to extract values (string or array).
					foreach ($details as $property => $value) {
						if (is_array($value)) {
							$value = implode(', ', $value);
						}
						$text_detail .= $property . ' => ' . $value . "\n";
					}
					//echo $text_detail;
					//$text = $pdf->getText();

					//$text = Encoding::fixUTF8($text);

					$filter1 = filter_var($text, FILTER_SANITIZE_STRING);
					$filter2 = preg_replace('/[\x00-\x1F\x7F\xA0]/u', " ", $filter1);
					$file_ocr_keyword = preg_replace('/\s+/', ' ', $filter2);
				} 
				catch (Exception $e) {
					if ($e->getMessage()) {
						//echo 'Returned: '.$e->getMessage();
						$file_ocr_keyword = "";
					}
				}
				
               }
			} else {
				$file_ocr_keyword = "";
			}
					
			// insert xs_file with relevant document info
            if ($file_section_id == 0){
                $updateSQL = sprintf("INSERT INTO xs_file (id_page, file_name, file_type, file_date, file_moddate, file_modby, file_ocr_keyword, file_metadata, file_version) VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s)",
				    GetSQLValueString($id, "int"),
					GetSQLValueString($fileData['name'], "text"),
				    GetSQLValueString(1, "int"),
					GetSQLValueString($file_moddate, "int"),
					GetSQLValueString($file_moddate, "int"),
					GetSQLValueString($file_modby , "text"),
					GetSQLValueString(utf8_encode($file_ocr_keyword) , "text"),
					GetSQLValueString(utf8_encode($text_detail) , "text"),
					GetSQLValueString($pdf_version , "text"));

				// get page subject using current page id				
				// get lang id session
				// if lang id = 1 , find page id for lang id 2 , vice versa
				// insert new file using page id for other lang
				$query_current_page = sprintf("SELECT * FROM xs_page WHERE idxs_page = %s", GetSQLValueString($id, "int"));
				//echo "<hr>".$query_current_page;//exit;
				$current_page = mysqli_query($exsite,  $query_current_page) or die(mysqli_error($exsite));
				$row_current_page = mysqli_fetch_assoc($current_page);
				$totalRows_current_page = mysqli_num_rows($current_page);

				$query_other_page = sprintf("SELECT * FROM xs_page WHERE xs_page_lang_id != %s AND xs_page_subject = %s", GetSQLValueString($_SESSION['lang_id'], "int"), GetSQLValueString($row_current_page['xs_page_subject'], "text"));
				//echo "<hr>".$query_other_page;//exit;
				$other_page = mysqli_query($exsite,  $query_other_page) or die(mysqli_error($exsite));
				$row_other_page = mysqli_fetch_assoc($other_page);
				$totalRows_other_page = mysqli_num_rows($other_page);

				$updateSQL1 = sprintf("INSERT INTO xs_file (id_page, file_name, file_type, file_date, file_moddate, file_modby, file_ocr_keyword, file_metadata, file_version) VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s)",
				    GetSQLValueString($row_other_page['idxs_page'], "int"),
					GetSQLValueString($fileData['name'], "text"),
				    GetSQLValueString(1, "int"),
					GetSQLValueString($file_moddate, "int"),
					GetSQLValueString($file_moddate, "int"),
					GetSQLValueString($file_modby , "text"),
					GetSQLValueString(utf8_encode($file_ocr_keyword) , "text"),
					GetSQLValueString(utf8_encode($text_detail) , "text"),
					GetSQLValueString($pdf_version , "text"));

            } else if ($file_section_id == 1){
                $updateSQL = sprintf("INSERT INTO xs_file (file_section_id, file_name, file_type, file_date, file_moddate, file_modby, file_ocr_keyword, file_metadata, file_version) VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s)",
				    GetSQLValueString($id, "int"),
					GetSQLValueString($fileData['name'], "text"),
				    GetSQLValueString(1, "int"),
					GetSQLValueString($file_moddate, "int"),
					GetSQLValueString($file_moddate, "int"),
					GetSQLValueString($file_modby , "text"),
					GetSQLValueString(utf8_encode($file_ocr_keyword) , "text"),
					GetSQLValueString(utf8_encode($text_detail) , "text"),
					GetSQLValueString($pdf_version , "text"));
				
				// get section subject using current section id				
				// get lang id session
				// if lang id = 1 , find section id for lang id 2 , vice versa
				// insert new file using section id for other lang
				$query_current_section = sprintf("SELECT * FROM xs_section WHERE idxs_section = %s", GetSQLValueString($id, "int"));
				//echo "<hr>".$query_current_section;//exit;
				$current_section = mysqli_query($exsite,  $query_current_section) or die(mysqli_error($exsite));
				$row_current_section = mysqli_fetch_assoc($current_section);
				$totalRows_current_section = mysqli_num_rows($current_section);

				$query_other_section = sprintf("SELECT * FROM xs_section WHERE xs_section_lang_id != %s AND xs_section_name = %s", GetSQLValueString($_SESSION['lang_id'], "int"), GetSQLValueString($row_current_section['xs_section_name'], "text"));
				//echo "<hr>".$query_other_section;//exit;
				$other_section = mysqli_query($exsite,  $query_other_section) or die(mysqli_error($exsite));
				$row_other_section = mysqli_fetch_assoc($other_section);
				$totalRows_other_section = mysqli_num_rows($other_section);

				$updateSQL1 = sprintf("INSERT INTO xs_file (file_section_id, file_name, file_type, file_date, file_moddate, file_modby, file_ocr_keyword, file_metadata, file_version) VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s)",
				GetSQLValueString($row_other_section['idxs_section'], "int"),
				GetSQLValueString($fileData['name'], "text"),
				GetSQLValueString(1, "int"),
				GetSQLValueString($file_moddate, "int"),
				GetSQLValueString($file_moddate, "int"),
				GetSQLValueString($file_modby , "text"),
				GetSQLValueString(utf8_encode($file_ocr_keyword) , "text"),
				GetSQLValueString(utf8_encode($text_detail) , "text"),
				GetSQLValueString($pdf_version , "text"));
            }
			
			echo $updateSQL;
			mysqli_select_db( $exsite, $database_exsite); 
			$Result = mysqli_query( $exsite, $updateSQL) or die(mysqli_error($exsite));
			

			echo $updateSQL1;
			mysqli_select_db( $exsite, $database_exsite); 
			$Result1 = mysqli_query( $exsite, $updateSQL1) or die(mysqli_error($exsite));
		} else {

			// The file type wasn't allowed
			echo 'Invalid file type.';
		}
	}
}
?>